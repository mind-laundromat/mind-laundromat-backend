name: Mind Laundromat CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      artifact_name: ${{ steps.upload.outputs.artifact-name }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Build with Gradle Wrapper
      run: ./gradlew build -x test

    - name: Upload artifact
      id: upload
      uses: actions/upload-artifact@v4
      with:
        name: mind-laundromat-backend-artifact
        path: build/libs/*.jar

  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.artifact_name }}

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST_IP }}
        username: ${{ secrets.AWS_HOST_USERNAME }}
        key: ${{ secrets.AWS_EC2_PEM_KEY }}
        script: |
          # 기존 프로세스 종료
          pgrep java && pkill -9 java || echo "No java process to kill"
          # 다운로드된 jar 파일의 이름을 app.jar로 고정
          mv *.jar app.jar
          # 고정된 파일명으로 애플리케이션 실행
          nohup java -jar ${{ secrets.DEPLOY_SCRIPT_ENV }} app.jar &

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@v3
